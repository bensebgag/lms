// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 directUrl = env("DIRECT_URL")
}

enum Role {
  student
  teacher
}


model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String?  @unique @db.VarChar(255)
  name      String?
  role       Role     @default(student) 
  avatarUrl String?   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  enrollments Enrollment[]
  courses     Course[]     @relation("TeacherCourses") 
}


model Course {
  id          String   @id @default(uuid()) @db.Uuid
  title       String   @db.VarChar(255)
  description String?  @db.Text
  imageUrl    String?  @db.VarChar(255)
  price       Float?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  enrollments Enrollment[]
  teacherId   String       @db.Uuid 
  teacher     User         @relation("TeacherCourses", fields: [teacherId], references: [id]) 
  chapters     Chapter[]
  categorieId String @db.Uuid
  gategorie  Category @relation(fields: [categorieId], references: [id]) 
}

model Enrollment {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  courseId  String   @db.Uuid
  progress  Float    @default(0.0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id])
  course   Course   @relation(fields: [courseId], references: [id])
  @@unique([userId, courseId])
}

model Chapter {
  id        String   @id @default(uuid()) @db.Uuid
  name     String   @db.VarChar(255)
  description   String?  @db.Text
  isPublished Boolean  @default(false)
  isFree     Boolean  @default(false)
  videoUrl   String?  @db.VarChar(255)
  isCompleted Boolean  @default(false)
  courseId  String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation(fields: [courseId], references: [id])
  attachments Attachemnt[]
}

model Attachemnt {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  paper       String   @db.VarChar(255)
  chapterId String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
}

model Category {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] 
}
